Metadata-Version: 2.1
Name: longimc
Version: 1.0.0
Summary: Low-rank matrix completion for longitudinal data
Author: Severin Elvatun
Author-email: langberg91@gmail.com
License: MIT
Platform: any
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Intended Audience :: Science/Research
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown; charset=UTF-8
License-File: LICENSE
Requires-Dist: scikit-learn>=1.0
Requires-Dist: numpy
Requires-Dist: pydantic<2.0
Requires-Dist: scipy
Requires-Dist: tensorflow
Requires-Dist: pandas
Requires-Dist: mlflow==2.8.0
Provides-Extra: testing
Requires-Dist: setuptools; extra == "testing"
Requires-Dist: pytest; extra == "testing"
Requires-Dist: pytest-cov; extra == "testing"
Requires-Dist: jupyter; extra == "testing"
Requires-Dist: notebook; extra == "testing"
Requires-Dist: bandit; extra == "testing"
Requires-Dist: black; extra == "testing"
Requires-Dist: black-nb; extra == "testing"
Requires-Dist: darglint; extra == "testing"
Requires-Dist: docutils<0.18; extra == "testing"
Requires-Dist: doc8; extra == "testing"
Requires-Dist: flake8; extra == "testing"
Requires-Dist: isort; extra == "testing"
Requires-Dist: nbconvert; extra == "testing"
Requires-Dist: nbformat; extra == "testing"
Requires-Dist: pytest-benchmark; extra == "testing"
Requires-Dist: pytest-xdist[psutil]; extra == "testing"
Requires-Dist: pytest-xprocess; extra == "testing"
Requires-Dist: igraph; extra == "testing"
Requires-Dist: py; extra == "testing"
Requires-Dist: pre-commit; extra == "testing"
Requires-Dist: tabulate; extra == "testing"
Requires-Dist: click; extra == "testing"
Provides-Extra: all
Requires-Dist: importlib-metadata; python_version < "3.8" and extra == "all"
Requires-Dist: setuptools; extra == "all"
Requires-Dist: pytest; extra == "all"
Requires-Dist: pytest-cov; extra == "all"
Requires-Dist: jupyter; extra == "all"
Requires-Dist: notebook; extra == "all"
Requires-Dist: bandit; extra == "all"
Requires-Dist: black; extra == "all"
Requires-Dist: black-nb; extra == "all"
Requires-Dist: darglint; extra == "all"
Requires-Dist: docutils<0.18; extra == "all"
Requires-Dist: doc8; extra == "all"
Requires-Dist: flake8; extra == "all"
Requires-Dist: isort; extra == "all"
Requires-Dist: nbconvert; extra == "all"
Requires-Dist: nbformat; extra == "all"
Requires-Dist: pytest-benchmark; extra == "all"
Requires-Dist: pytest-xdist[psutil]; extra == "all"
Requires-Dist: pytest-xprocess; extra == "all"
Requires-Dist: igraph; extra == "all"
Requires-Dist: py; extra == "all"
Requires-Dist: pre-commit; extra == "all"
Requires-Dist: tabulate; extra == "all"
Requires-Dist: click; extra == "all"

=======
matcomp
=======

*Low-rank matrix completion for longitudinal data*

.. image:: https://github.com/gsel9/matcomp/actions/workflows/Tests.yml/badge.svg
    :target: https://github.com/gsel9/matcomp/actions/workflows/Tests.yml
    :alt: Tests

.. image:: https://codecov.io/gh/gsel9/matcomp/branch/main/graph/badge.svg?token=GDCXEF2MGE
    :target: https://codecov.io/gh/gsel9/matcomp
    :alt: Coverage

.. image:: https://readthedocs.org/projects/matcomp/badge/?version=latest
        :target: https://matcomp.readthedocs.io/en/latest/?badge=latest
        :alt: Documentation Status

.. image:: https://zenodo.org/badge/402865945.svg
   :target: https://zenodo.org/badge/latestdoi/402865945

.. image:: https://img.shields.io/badge/code%20style-black-000000.svg
    :target: https://github.com/psf/black

matcomp is a Python library for learning coupled matrix factorizations with flexible constraints and regularization.
For a quick introduction to coupled matrix factorization and PARAFAC2 see the `online documentation <https://matcomp.readthedocs.io/en/latest/index.html>`_.

Installation
------------

To install matcomp and all MIT-compatible dependencies from PyPI, you can run

.. code::

        pip install matcomp

If you also want to enable total variation regularization, you need to install all components, which comes with a MIT lisence

.. code::

        pip install matcomp[gpl]

About
-----

.. image:: docs/figures/CMF_multiblock.svg
    :alt: Illustration of a coupled matrix factorization

matcomp is a Python library that adds support for coupled matrix factorization in
`TensorLy <https://github.com/tensorly/tensorly/>`_. For optimization, MatCoupLy uses
alternating updates with the alternating direction method of multipliers (AO-ADMM),
which allows you to fit coupled matrix factorization (and PARAFAC2) models with flexible
constraints in any mode of your data [1, 2]. Currently, MatCoupLy supports the NumPy and
PyTorch backends of TensorLy.


Example
-------

TODO


References
----------

* [1]: Langberg, Geir Severin RE, et al. "Matrix factorization for the reconstruction of cervical cancer screening histories and prediction of future screening results." BMC bioinformatics 23.12 (2022): 1-15.
* [2]: Langberg, Geir Severin RE, et al. "Towards a data-driven system for personalized cervical cancer risk stratification." Scientific Reports 12.1 (2022): 12083.
* [2]: TODO: cross-pop paper 
